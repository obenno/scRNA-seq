// Global default params, used in configs
// config file was altered based on https://github.com/nf-core/rnaseq/blob/master/nextflow.config
manifest.version = "v1.1.8"
params {
    input = null
    species = null
    bc_read = "fastq_1"
    // Genome Index dir
    genomeDir = null
    genomeGTF = null

    // setting for mkref workflow
    mkrefOpt = ""
    refoutDir = "STAR_reference"

    // whether trimm reads
    // not used for now
    trimReads = false
    // whether publish trimmed reads
    save_merged_fastq = false
    // default length to 28, to be compatible with 10x bc reads
    trimLength = 28
    // trimming option was added here
    trimOpt = '-A GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT...AGATCGGAAGAGCGTCGTGTAGGGAAAGA -A "A{30}" -G AAGCAGTGGTATCAACGCAGAGTACATGGG -n 3'
    // whitelist file
    whitelist = null

    // solo params
    soloType = "CB_UMI_Simple"
    // Barcode geometry, thunderbio v2 library was used as defaults
    soloCBstart = 1
    soloCBlen = 29
    soloUMIstart = 30
    soloUMIlen = 10
    
    // option for utilizing multiple mapped reads
    // the default of starolo is unique
    // starscope v0.0.9 keep the default the same as starsolo since not all the cases need multiple gene reads
    // So far only EM option is supported
    soloMultiMappers = "Unique"
    // option for utilizing reads mapped to introns
    // the default of starolo is Gene (only exon reads)
    // here we used GeneFull as default (intron+exon)
    // please note only Gene or GeneFull (not both) could be set here
    // the other two options are not supported (SJ Velocyto)
    soloFeatures = "GeneFull"
    // Added strand option, 5' RNAseq may have opposite orientation
    // default Forward for 3' RNAseq
    soloStrand = "Forward"
    // cell filtering
    soloCellFilter = "EmptyDrops_CR"
    clipAdapterType = "CellRanger4"
    outFilterScoreMin = 30
    soloCBmatchWLtype = "1MM_multi_Nbase_pseudocounts"
    soloUMIfiltering = "MultiGeneUMI_CR"
    soloUMIdedup = "1MM_CR"
    outSAMtype = "BAM SortedByCoordinate" // CB_samTagOut requires outSAMtype = "BAM Unsorted [and/or SortedByCoordinate]"
    outSAMunmapped = "Within KeepPairs"
    publishBAM = false
    publishSaturation = false
    // settings for inDrop-seq, activate when soloType=="CB_UMI_Complex"
    // default settings works for inDrop (Zilionis et al, Nat. Protocols, 2017)
    // note soloCBmatchWLtype could only use "1MM" instead the setting above

    // STARsolo options for complex barcode
    // STARsolo defaults are for inDrop
    // only works for soloType = "CB_UMI_Complex"
    soloCBposition = "0_0_2_-1  3_1_3_8"
    soloUMIposition = "3_9_3_14"
    soloAdapterSequence = "GAGTGATTGCTTGTGACGCCTT"
    soloAdapterMismatchesNmax = 1
    // whitelist matching method also needs to be adjusted
    //soloCBmatchWLtype = "1MM"
    // Additional barcode list needs to be provided: BC1, BC2 and BC3 for BD, or BC1 and BC2 for inDrop
    //barcodelist = null // deprecated, parse mulitple BC files to whitelist parameter instead
    
    // option for trust4 vdj reference files
    // human hg38
    trust4_vdj_refGenome_fasta = "$baseDir/vdj/reference/hg38_bcrtcr.fa"
    trust4_vdj_imgt_fasta = "$baseDir/vdj/reference/human_IMGT+C.fa"
    // mouse mm10
    //trust4_vdj_refGenome_fasta = "$baseDir/vdj/reference/GRCm38_bcrtcr.fa"
    //trust4_vdj_imgt_fasta = "$baseDir/vdj/reference/mouse_IMGT+C.fa"

    // use the last 90 nt of R1 in trust4 process
    trust4_readFormat = "r1:59:-1"
    // If only cDNA reads are used, -u argument is parsed to TRUST4
    trust4_cDNAread_only = false

    // pipeline global
    outdir = './results'
    publish_dir_mode = 'copy'
    tracedir = "${params.outdir}/pipeline_info"

    // conda setting
    enable_conda = false
    // running resource
    max_memory = '60.GB'
    max_cpus = 16
    max_time = '240.h'
}

// process resource
process {
    cpus   = 10
    memory = 50.GB
    //time   = 10.h

    errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
    maxRetries    = 0
    maxErrors     = '-1'

    // define process specific docker contaier
    // withName: STARSOLO {
    //      container = 'quay.io/biocontainers/star:2.7.8a--h9ee0642_1'
    // }
    // withName: QUALIMAP_RNASEQ {
    //      container = 'quay.io/biocontainers/qualimap:2.2.2d--1'
    // }
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}